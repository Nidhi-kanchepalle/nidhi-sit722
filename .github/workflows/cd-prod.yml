name: Deploy to Production AKS (main)

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [closed]
    branches: [ "main" ]

env:
  LOCATION: "australiaeast"
  SUBSCRIPTION_ID: "c564ea44-58b2-4e72-9cce-a6c07db2cf60"
  RG_PROD: "rg-sit722-nidhi-prod"
  AKS_PROD: "aks-sit722-nidhi-prod"
  ACR_NAME: "sit722nidhiacr"
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set subscription
        run: az account set --subscription "$SUBSCRIPTION_ID"

      - name: Login to ACR
        run: az acr login --name "$ACR_NAME"

      - name: Build & push backend images
        run: |
          set -e
          docker build -t $REGISTRY/customer_service:latest backend/customer_service
          docker build -t $REGISTRY/product_service:latest  backend/product_service
          docker build -t $REGISTRY/order_service:latest    backend/order_service
          docker push $REGISTRY/customer_service:latest
          docker push $REGISTRY/product_service:latest
          docker push $REGISTRY/order_service:latest

      - name: Build & push frontend image
        run: |
          set -e
          docker build -t $REGISTRY/frontend:latest frontend
          docker push $REGISTRY/frontend:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Get kubeconfig (prod)
        run: az aks get-credentials -g "$RG_PROD" -n "$AKS_PROD" --admin --overwrite-existing

      - name: Apply config & secrets
        run: |
          kubectl apply -f k8s/configmaps.yaml
          kubectl apply -f k8s/secrets.yaml

      - name: Apply databases
        run: |
          kubectl apply -f k8s/customer-db.yaml
          kubectl apply -f k8s/product-db.yaml
          kubectl apply -f k8s/order-db.yaml
          kubectl rollout status deploy/customer-db-deployment-w10e1 --timeout=180s || true
          kubectl rollout status deploy/product-db-deployment-w10e1  --timeout=180s || true
          kubectl rollout status deploy/order-db-deployment-w10e1    --timeout=180s || true

      - name: Apply application workloads
        run: |
          kubectl apply -f k8s/customer-service.yaml
          kubectl apply -f k8s/product-service.yaml
          kubectl apply -f k8s/order-service.yaml
          kubectl apply -f k8s/frontend.yaml
